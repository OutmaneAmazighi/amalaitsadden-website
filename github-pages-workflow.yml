name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # Set a branch name to trigger deployment

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install
        
      - name: Debug project structure
        run: |
          echo "Current directory structure:"
          ls -la
          echo "Client directory content:"
          ls -la client || echo "No client directory found"
          
      - name: Create 404.html for SPA routing
        run: |
          mkdir -p static-assets
          cat > static-assets/404.html << 'EOL'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Association Amal Ait Sadden</title>
            <script>
              // Capture the path and query params from the current URL
              const path = window.location.pathname.slice(1);
              const query = window.location.search.slice(1);
              
              // Redirect to the index.html with these params
              window.location.href = 
                window.location.origin + 
                window.location.pathname.split('/').slice(0, -1).join('/') + 
                '/' +
                '?' + 
                (path ? 'p=' + path + '&' : '') + 
                query;
            </script>
          </head>
          <body>
            <p>Redirecting to homepage...</p>
          </body>
          </html>
          EOL

      # Modified build approach to ensure the React app is built correctly
      - name: Build React App for GitHub Pages
        run: |
          # Create a temporary directory for the build
          mkdir -p gh-pages-build
          
          # We will not overwrite the existing index.html since it has important resources
          # Instead, we'll make a backup of it to ensure it's not modified during build
          cp client/index.html client/index.html.bak
          
          # Create a simplified Vite config in the client directory
          cat > client/vite.config.js << 'EOL'
          import { defineConfig } from "vite";
          import react from "@vitejs/plugin-react";
          import path from "path";
          
          export default defineConfig({
            plugins: [react()],
            resolve: {
              alias: {
                '@': path.resolve(__dirname, "src"),
                '@shared': path.resolve(__dirname, "../shared"),
                '@assets': path.resolve(__dirname, "../attached_assets"),
              },
            },
            build: {
              outDir: path.resolve(__dirname, "../gh-pages-build"),
              emptyOutDir: true,
            },
            base: './',
          });
          EOL
          
          # Build the React app directly from the client directory
          cd client
          echo "Building React app with Vite..."
          npx vite build --config vite.config.js
          cd ..
          
          # Verify the build was created properly
          echo "Build output directory contents:"
          ls -la gh-pages-build || echo "No gh-pages-build directory found"
          
          # Check if index.html exists in the build directory
          if [ ! -f "gh-pages-build/index.html" ]; then
            echo "ERROR: index.html not found in build output directory!"
            exit 1
          fi
          
          # Copy 404.html to the build directory
          cp static-assets/404.html gh-pages-build/404.html
          
          # Add GitHub Pages SPA routing script to index.html
          sed -i 's/<head>/<head>\n  <script>\n    \/\/ GitHub Pages SPA routing\n    (function() {\n      const query = window.location.search.substring(1);\n      const pairs = query.split("\\&").map(pair => pair.split("="));\n      const params = pairs.reduce((acc, pair) => {\n        if (pair[0]) acc[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || "");\n        return acc;\n      }, {});\n      \n      if (params.p) {\n        history.replaceState(null, null, params.p + (query.replace("p=" + params.p, "") ? "?" + query.replace("p=" + params.p + "\\&", "").replace("p=" + params.p, "") : ""));\n      }\n    })();\n  <\/script>/' gh-pages-build/index.html
          
          # Copy all assets from the attached_assets directory to the build
          if [ -d "attached_assets" ]; then
            mkdir -p gh-pages-build/assets/attached_assets
            cp -r attached_assets/* gh-pages-build/assets/attached_assets/ || echo "Warning: Could not copy attached_assets"
          fi
          
          echo "Final build directory contents:"
          ls -la gh-pages-build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages  # The branch the action should deploy to.
          folder: gh-pages-build  # The folder the action should deploy.
          clean: true  # Automatically remove deleted files from the deploy branch